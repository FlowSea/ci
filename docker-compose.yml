version: '3.3'
services:

  drone-server:
    image: drone/drone:${DRONE_VERSION}
    networks:
      backend:
        ipv4_address: 172.28.1.101
    ports:
      # - 80:80
      # - 443:443
      - "127.0.0.1:8000:8000"
      # - 9000:9000
    volumes:
      - drone-data:/var/lib/drone/:rw
      # - ./conf.d/ssl/drone.xc725.wang.crt:/etc/certs/drone.xc725.wang.crt
      # - ./conf.d/ssl/drone.xc725.wang.key:/etc/certs/drone.xc725.wang.key
  #  restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_HOST=https://drone.xc725.wang
      - DRONE_GOGS=true
      - DRONE_GOGS_URL=https://git.xc725.wang
      # - DRONE_GITHUB=true
      # - DRONE_GITHUB_CLIENT=afff1c7c313e10c7550b
      # - DRONE_GITHUB_SECRET=7650e2abaf0e8100cfd2dd543fe8f094560e5d10
      - DRONE_SECRET=khs1994
      # - DRONE_SERVER_CERT=/etc/certs/drone.xc725.wang.crt
      # - DRONE_SERVER_KEY=/etc/certs/drone.xc725.wang.key

  drone-agent:
    image: drone/agent:${DRONE_VERSION}
    networks:
      backend:
    command: agent
    # restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=khs1994
    dns: 114.114.114.114

  gogs:
    image: gogs/gogs
    networks:
      backend:
        ipv4_address: 172.28.1.102
    ports:
      - "22:22"
      - "127.0.0.1:10080:3000"
    volumes:
      - gogs-data:/data:rw
      - ./gogs/app.prod.ini:/data/gogs/conf/app.ini:ro
      - ./conf.d/ssl:/data/ssl:rw
    extra_hosts:
      - "drone.xc725.wang:${PUBLIC_IP}"

  mysql:
    image: mysql:${MYSQL_VERSION}
    networks:
      backend:
        ipv4_address: 172.28.1.103
    env_file: .env
    # ports:
      # - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql:rw

  registry:
    image: registry
    networks:
      backend:
        ipv4_address: 172.28.1.104
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - registry-data:/var/lib/registry:rw

  # nginx:
  #   image: khs1994/nginx:${NGINX_VERSION}
  #   networks:
  #     backend:
  #   env_file: .env
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./conf.d:/etc/nginx/conf.d

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 172.28.1.1/24

volumes:
  gogs-data:
  mysql-data:
  drone-data:
  registry-data:
