version: '3.3'
services:

  drone-server:
    image: drone/drone:${DRONE_VERSION}
    networks:
      backend:
        # ipv4_address: 172.28.1.101
    ports:
      # - 80:80
      # - 443:443
      - "${PUBLIC_IP}:8000:8000"
      # - 9000:9000
    volumes:
      - drone-data:/var/lib/drone/:rw
      # - ${SSL_PATH}:/etc/certs
    restart: always
    env_file: .env
    environment:
      - DRONE_HOST=https://drone.${DOMAIN}
      - DRONE_GOGS_URL=https://git.${DOMAIN}

  drone-agent:
    image: drone/agent:${DRONE_VERSION}
    networks:
      backend:
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    env_file: .env
    dns: ${DNS}

  gogs:
    image: gogs/gogs
    networks:
      backend:
    ports:
      - "22:22"
      - "${PUBLIC_IP}:10080:3000"
    volumes:
      - gogs-data:/data:rw
      - ./gogs/app.prod.ini:/data/gogs/conf/app.ini:ro
      - ${SSL_PATH}:/data/ssl:rw
    extra_hosts:
      - "drone.${DOMAIN}:${PUBLIC_IP}"

  mysql:
    image: mysql:${MYSQL_VERSION}
    networks:
      backend:
    env_file: .env
    # ports:
      # - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql:rw

  registry:
    image: registry
    networks:
      backend:
    ports:
      - "${PUBLIC_IP}:5000:5000"
    volumes:
      - registry-data:/var/lib/registry:rw

  # nginx:
  #   image: khs1994/nginx:${NGINX_VERSION}-alpine
  #   networks:
  #     backend:
  #   env_file: .env
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./conf.d:/etc/nginx/conf.d

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 172.28.1.1/24

volumes:
  gogs-data:
  mysql-data:
  drone-data:
  registry-data:
